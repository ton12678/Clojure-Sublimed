[
 // // Evaluate
 // {"keys": ["ctrl+enter"],
 //  "command": "clojure_sublimed_eval",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Evaluate Buffer
 // {"keys": ["ctrl+b"],
 //  "command": "clojure_sublimed_eval_buffer",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Interrupt Pending Evaluations
 // {"keys": ["ctrl+c"],
 //  "command": "clojure_sublimed_interrupt_eval",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
 
 // // Toggle Info
 // {"keys": ["ctrl+i"],
 //  "command": "clojure_sublimed_toggle_info",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Clear Evaluation Results
 // {"keys": ["ctrl+l"],
 //  "command": "clojure_sublimed_clear_evals",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Extras

 // // Look for .nrepl-port file and try connection to port in it
 // {"keys":    ["ctrl+j"],
 //  "command": "clojure_sublimed_connect_nrepl_jvm",
 //  "args":    {"address": "auto"}},

 // // Toggle Stacktrace
 // {"keys": ["ctrl+e"],
 //  "command": "clojure_sublimed_toggle_trace",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Toggle Symbol Info
 // {"keys": ["ctrl+d"],
 //  "command": "clojure_sublimed_toggle_symbol",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Copy Evaluation Result
 // {"keys": ["super+c"],
 //  "command": "clojure_sublimed_copy",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Reindent
 // {"keys": ["ctrl+f"],
 //  "command": "clojure_sublimed_reindent",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},

 // // Insert New Line
 // {"keys": ["enter"],
 //  "command": "clojure_sublimed_insert_newline",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"},
 //              {"key": "auto_complete_visible", "operator": "equal", "operand": false},
 //              {"key": "panel_has_focus", "operator": "equal", "operand": false}]},

 // // Toggle Comment
 // {"keys": ["super+forward_slash"],
 //  "command": "clojure_sublimed_toggle_comment",
 //  "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]},
]